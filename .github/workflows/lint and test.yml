name: Lint and Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        cgal-version: [5.5.1]  # Adjust the CGAL version as needed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 numpy tensorflow
        pip install setuptools wheel
        pip install --upgrade setuptools
        sudo apt-get update
        sudo apt-get install -y build-essential
        sudo apt-get install -y g++
        # Add error handling and update package lists before installing libm-dev
        sudo apt-get update || echo "apt-get update failed. Continuing anyway..."
        sudo apt-get install -y libm-dev || echo "libm-dev not found. Continuing anyway..."
        sudo apt-get install -y libexecinfo-dev  # for execinfo.h
        # Install CGAL
        sudo apt-get install -y libcgal-dev
        sudo apt-get install -y libcgal-qt5-dev  # If you need CGAL with Qt support
        # Additional compiler arguments for thread safety (if needed)
        # Add your custom commands here for additional configurations
        
    - name: Install FastJet dependencies
      run: |
        sudo apt-get install -y libgmp-dev
        sudo apt-get install -y libmpfr-dev
        sudo apt-get install -y swig
        # Install FastJet via pip
        pip install fastjet
      
    - name: Configure FastJet
      run: |
        # Replace the following line with the appropriate command for configuring FastJet
        echo "Configure FastJet here"

    - name: Build FastJet
      run: |
        # Add error handling for configuration and building steps
        set -e
        make

    - name: Run linting
      run: |
        flake8 . --count --show-source --statistics --max-line-length=120 --extend-ignore=E203,W503,F401,F405,F403
      env:
        FLAKE8_IGNORE: "F401,F405,F403"

    - name: Run tests
      run: |
        python -m unittest discover -s final_slow_version -p 'test*.py'
